
// Color variants for most components
$schools:
(
    school-white  : white,
    school-blue   : $blue,
    school-green  : green,
    school-orange : #FF9933,
    school-danger : $danger-color,
    school-nav    : $nav-color
);

// Color variants for alert messages
$alert-schools:
(
    school-alert-warn  : $danger-color,
    school-alert-error : $error-color
);

@mixin define-school($color, $school-name:null)
{
    // $school-name: str-slice(#{&}, 2); // store value of & without dot for portal animation name
    
    @at-root button#{&},
    input[type="button"]#{&},
    input[type="reset"]#{&},
    input[type="submit"]#{&},
    .boton#{&}
    {
        @include glow-idle-text($color);
        &:not(.no-border)
        {
            @include spell-box($color, 2px, 4px);
        }
        
        //span, i, label, p
        > .power-words
        {
            @include glow-idle-text($color);
        }
        
        &:hover, &:focus
        {
            &:not([disabled])
            {
                @include glow-mild-text($color);
                &:not(.no-border)
                {
                    @include glow-mild-border($color);
                }
            }
        }
        
        &:active:not([disabled])
        {
            @include glow-strong-text($color);
            &:not(.no-border)
            {
                @include glow-strong-border($color);
            }
        }
        
        &.selected:not([disabled])
        {
            @include glow-strong-text($color);
        }
    }
    
    @at-root hr#{&}, & > hr
    {
        @include spell-box($color);
        @include glow-mild-border($color);
    }
    
    &.box
    {
        @include spell-box($color);
        
        @include glow-idle-text($color);
    }
    @at-root a.box#{&}
    {
        @include spell-box($color);
    
        @include glow-idle-text($color);
        
        &:hover, &:focus
        {
            @include glow-mild-text($color);
            @include glow-mild-border($color);
        }
    
        &:active
        {
            @include glow-strong-text($color);
            @include glow-strong-border($color);
        }
    }
    
    &.arcane-tabs
    {
        > .tab-list > li .bolt-blurred
        {
            stroke: $color;
        }
        
        > .pannus
        {            
            @include spell-box($color);
            @include glow-idle-text(mix($color, $text-color, 40%));
            background-color: rgba($color, 0);
        }
        > .pannus.switching
        {
            @include glow-strong-border($color);
            background-color: rgba($color, 0.5);
            
            > .tab-content.selected
            {
                @include glow-strong-text(mix($color, $text-color, 40%));
                
                img
                {
                    @include glow-strong-border($color);
                }
            }
        }
    }
    
    @if ($school-name) // can't create portal animation without a school-name
    {
        &.portal, &.portal::before, &.portal::after
        {
            border : 1px solid $color;
        }
        &.portal
        {
            border-color: tint($color, $glow-portal-white-percent);
            box-shadow  : inset   0 0 ($portal-ring-spacing * 2) 1px rgba($color, 1),
                       /*outset*/ 0 0  $glow-strong-border-blur  2px rgba($color, 1);
        }
        &.portal::before, &.portal::after
        {
            animation-name : portal-ring-loop-#{$school-name};
        }
        
        @keyframes portal-ring-loop-#{$school-name}
        {
            0%
            {
                width  : calc(100% - 0px);
                height : calc(100% - 0px);
                top    : 0;
                left   : 0;
                
                box-shadow : inset   0 0 $glow-mild-border-blur 1px rgba($color, 1),
                          /*outset*/ 0 0 $glow-mild-border-blur 1px rgba($color, 1);
                opacity: 1;
            }
            50%
            {
                width  : calc(100% - #{$portal-ring-spacing - 2});
                height : calc(100% - #{$portal-ring-spacing - 2});
                top    : $portal-ring-spacing / 2 - 1;
                left   : $portal-ring-spacing / 2 - 1;
                
                box-shadow : inset   0 0 ($glow-mild-border-blur / 2) 0.5px rgba($color, 1),
                          /*outset*/ 0 0 ($glow-mild-border-blur / 2) 0.5px rgba($color, 1);
                opacity: 0.5;
            }
            100%
            {
                width  : calc(100% - #{$portal-ring-spacing * 2 - 2});
                height : calc(100% - #{$portal-ring-spacing * 2 - 2});
                top    : $portal-ring-spacing - 1;
                left   : $portal-ring-spacing - 1;
                
                box-shadow : inset   0 0 0 0 rgba($color, 1),
                    /*outset*/ 0 0 0 0 rgba($color, 1);
                opacity: 0;
            }
        }
    }
}
@mixin define-alert-school($color)
{
    &.box
    {
        @include spell-box($color, 3px, $border-style:double);
        // border : 3px double;
        @include glow-strong-border($color, 0%);
        
        color: $color;
        @include glow-strong-text($color, 0%);
        //width: 100%;
    }
}


// Loop through school maps defining schools
@each $school, $color in $schools
{   
    // @if type-of($color) == list   // color and opacity specified
    // {
    //     $opacity: nth($color, 2);
    //     $color:   nth($color, 1);
    // }
    // @else
    // {
    //     $opacity: 1;
    // }
    // 
    // .#{$school} { @include define-school($color, $opacity, $school); }
    .#{$school} { @include define-school($color, $school); }
}
@each $school, $color in $alert-schools
{
    .#{$school} { @include define-alert-school($color); }
}

// Kyle Fiegener
// ©LOL copyright

// Animate EVERYTHING, MWAHAHAHAAA
//*, *::before, *::after
//{
//    transition: transform   $transition-duration,
//                color       $transition-duration,
//                opacity     $transition-duration,
//                border      $transition-duration,
//                text-shadow $transition-duration,
//                box-shadow  $transition-duration;
//}

body, #arcane, .arcane
{
    background-color: black;
    
    @include glow-idle-text($text-color);
    
    font-family: $font-family-bottom-level;
    font-size:   $font-size-base;
    line-height: $line-height-computed;
}

.h1, .h2, .h3, .h4, .h5, .h6, h1, h2, h3, h4, h5, h6
{
    font-weight: 500;
    line-height: 1.1;
    
    margin-top:     1em;
    margin-bottom:  0.5em;
    
    @at-root *:not(a) > &:first-child
    {
        margin-top: 0.25em;
    }
}
.h1, .h2, .h3, h1, h2, h3
{
    font-family: $font-family-top-level;
}
.h4, .h5, .h6, h4, h5, h6
{
    font-family: $font-family-mid-level;
}
.h1, h1
{
    font-size: $font-size-h1;
}
.h2, h2
{
    font-size: $font-size-h2;
}
.h3, h3
{
    font-size: $font-size-h3;
}
.h4, h4
{
    font-size: $font-size-h4;
}
.h5, h5
{
    font-size: $font-size-h5;
    //font-weight: 600;
}
.h6, h6
{
    font-size: $font-size-h6;
    //font-weight: 700;
}

p, blockquote
{
    margin: 0.5em 0;
    
    &:first-child
    {
        margin-top: 0;
    }
    &:last-child
    {
        margin-bottom: 0;
    }
}

blockquote
{
    padding-left: 1.75em;
    font-size: calc(1em + 2px);
    font-style: italic;
    letter-spacing: -1px;
    
    position: relative;
    
    &::before
    {
        content: "“";
                
        font-family: Georgia, serif;
        font-size: 3em;
        font-style: normal;
        //transform: scale(3.0);
        opacity: 0.6;
    
        line-height: 0;
        
        display: inline-block;
        width: 0.5833333333333333em;
        height: 100%;
        background: linear-gradient(to right, rgba($text-color, 0.5) 0%, rgba($text-color, 0) 100%);
        
        position: absolute;
        left: 0;
        top: 0;
        padding-left: 0.04em;
        padding-top: 0.5208333333333333em;
    }
    
    cite
    {
        display: block;
        font-size: calc(1em - 2px);
        font-style: normal;
        letter-spacing: 0;
        font-weight: bold;
        
        &::before
        {
            content: "―";
        }
    }
}

hr
{
    width: 85%;
        
    @include spell-box($text-color);
    @include glow-mild-border($text-color);
    
    margin: 1em auto;
}

//ul:not(.list-style-none)
ul.bullae
{
    padding-left: 1em;
    
    > li::before
    {
        content: "•";
        
        position: relative;
        right: 1em;
        
        display: inline-block;
        width: 0;
    }
}

a
{
    @include transition-anim-psuedo();
}

a:not(.boton)
{
    @include glow-idle-text($link-color);
    text-decoration: none;
    
    position: relative;
    
    &.box
    {
        @include spell-box($link-color);
        @include glow-idle-text($link-color);
    }
    
    &:hover, &:focus
    {
        @include glow-mild-text($link-color);
        
        &.box
        {
            @include glow-mild-border($link-color);
        }
    }
    
    &:active
    {
        @include glow-strong-text($link-color);
    
        &.box
        {
            @include glow-strong-border($link-color);
        }
    }
    
    &:not(.box)
    {
        &::after
        {
            content: "";
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            
            @include spell-box($link-color);
            
            opacity: 0;
        }
        &:focus:not(:active)::after
        {
            content: "";
            
            @include glow-mild-border($link-color);
            
            opacity: 1;
        }
    }
}

a:not(.boton):not(.box)
{
    > img
    {
        @include transition-anim();
        
        @include spell-box($link-color);
    }
    &:hover > img, &:focus > img
    {
        @include glow-mild-border($link-color);
    }
    &:active > img
    {
        @include glow-strong-border($link-color);
    }
}


button,
input[type="button"],
input[type="reset"],
input[type="submit"],
.boton
{
    @include transition-anim();
    
    @include glow-idle-text($bttn-color);
    @include spell-box($bttn-color, 2px, 4px);
    padding: 3px 6px;
    
    > .power-words
    {
        @include transition-anim();
        
        display: inline-block;
        font-family: $font-stack-arcane-mid;
    }
    
    &[disabled]
    {
        //span, i, label, p
        > .power-words
        {
            opacity: 0.6
        }
    }
    &:hover, &:focus
    {
        &:not([disabled])
        {
            @include glow-mild-text($bttn-color);
            @include glow-mild-border($bttn-color);
            
            //span, i, label, p
            > .power-words
            {
                //@include glow-mild-text($bttn-color);
                transform: scale(1.15, 1.15);
            }
        }
        &[disabled]
        {
            //span, i, label, p
            > .power-words
            {
                opacity: 0.3;
                transform: scale(0.8, 0.8);
            }
        }
    }
    
    &:active:not([disabled])
    {
        @include glow-strong-text($bttn-color);
        @include glow-strong-border($bttn-color);
    
        padding: 3px 6px; // probably only necessary because of something bootstrap's doing...?
    
        //span, i, label, p
        > .power-words
        {
            transform: scale(1.25, 1.25);
        }
    }
    
    &.selected:not([disabled])
    {
        @include glow-strong-text($bttn-color);
        
        //span, i, label, p
        > .power-words
        {
            transform: scale(1.25, 1.25);
        }
    }
}

form label
{
    @include transition-anim();
    
    @include glow-idle-text($form-color, $form-opacity);
}
form label.label-focus
{
    @include glow-mild-text($form-color);
}

// http://www.w3schools.com/html/html_form_input_types.asp
// Text-based input fields
textarea,
select,
input:not([type="submit"]):not([type="reset"]):not([type="radio"]):not([type="checkbox"]):not([type="button"]):not([type="color"]):not([type="range"]) //, :not([type="number"]),
// div.input-type-number
{
    @include transition-anim();
    
    @include glow-idle-text($form-color, $form-opacity);
    @include spell-box($form-color, $opacity:$form-opacity);
    
    &.has-error
    {
        @include spell-box($error-color);
    }
    
    padding: $box-padding / 2;
    
    //@include glow-mild-border($form-color);
    
    &:focus:not([readonly]), &.focus
    {
        @include glow-mild-text($form-color);
        @include glow-strong-border($form-color);
        
        &.has-error
        {
            @include glow-strong-border($error-color, 0%);
        }
    }
    &[readonly]
    {
        @include spell-box($text-color);
        @include glow-mild-border($text-color);
    }
}
select, option
{
    background: none;
}

// Content container with inward-moving rings at the border to look like a portal
.portal
{
    @include transition-anim-psuedo();
    
    background: $portal-bg-properties;
}
.portal, .portal::before, .portal::after
{
    border-radius : 6px;
    border        : 1px solid $container-color;
}
.portal
{
    border-color: tint($container-color, $glow-portal-white-percent);
    box-shadow  : inset   0 0 ($portal-ring-spacing * 2) 1px rgba($container-color, 1),
               /*outset*/ 0 0  $glow-strong-border-blur  2px rgba($container-color, 1);
    padding     : $portal-ring-spacing - 2;
    
    position    : relative;
}
.portal::before, .portal::after
{
    content       : "";
    position      : absolute;
    
    animation-name            : portal-ring-loop;
    animation-duration        : $portal-ring-loop-duration;
    animation-timing-function : linear;
    animation-iteration-count : infinite;
    
    pointer-events: none;
}
.portal::before
{
    animation-delay: -($portal-ring-loop-duration / 2);
}

// Very simple content container with matching text and border color – probably best for messages and the like.
.box
{
    padding: $box-padding;
    
    @include spell-box($container-color);
    @include glow-idle-text($container-color);
}

@keyframes portal-ring-loop
{
    0%
    {
        width  : calc(100% - 0px);
        height : calc(100% - 0px);
        top    : 0;
        left   : 0;
        
        box-shadow : inset   0 0 $glow-mild-border-blur 1px rgba($container-color, 1),
                  /*outset*/ 0 0 $glow-mild-border-blur 1px rgba($container-color, 1);
        opacity: 1;
    }
    50%
    {
        width  : calc(100% - #{$portal-ring-spacing - 2});
        height : calc(100% - #{$portal-ring-spacing - 2});
        top    : $portal-ring-spacing / 2 - 1;
        left   : $portal-ring-spacing / 2 - 1;
        
        box-shadow : inset   0 0 ($glow-mild-border-blur / 2) 0.5px rgba($container-color, 1),
                  /*outset*/ 0 0 ($glow-mild-border-blur / 2) 0.5px rgba($container-color, 1);
        opacity: 0.5;
    }
    100%
    {
        width  : calc(100% - #{$portal-ring-spacing * 2 - 2});
        height : calc(100% - #{$portal-ring-spacing * 2 - 2});
        top    : $portal-ring-spacing - 1;
        left   : $portal-ring-spacing - 1;
        
        box-shadow : inset   0 0 0 0 rgba($container-color, 1),
                  /*outset*/ 0 0 0 0 rgba($container-color, 1);
        opacity: 0;
    }
}

.form-widget
{
    width: 100%;
}

/* Spin buttons via external DOM elements
fieldset.input-type-number
{
    input[type="number"]
    {
        // padding-right: 18px !important;
    }
    
    .spin-block
    {
        // margin-left: -10px;
        display: inline-block;
        // position: relative;
        // top: 5px;
        // left: -20px;
    }
    button.spin, .spin.boton
    {
        border: none;
        @include glow-idle-text($form-color);
        padding: 0;
        margin: 0;
        line-height: 0;
        
        cursor: default;
        
        &:first-child
        {
            padding-bottom: 5px;
        }
        &:last-child
        {
            padding-top: 5px;
        }
        
        i
        {
            @include glow-idle-text($form-color);
            line-height: 0;
        }
    }
}//*/
// input[type=number]::shadow
// {
//     // *
//     // {
//         background: none;
//         border: none;
//         @include glow-idle-text($form-color);

//         &:focus
//         {
//             @include glow-mild-text($form-color);
//         }
//     // }
// }

// .flavor-error
// {
//     color: $error-color;
//     @include glow-idle-text($error-color);
// }


@mixin define-flavor($color)
{
    $flavor-name: str-slice(#{&}, 2); // store value of & without dot
    
    @at-root button#{&},
    input[type="button"]#{&},
    input[type="reset"]#{&},
    input[type="submit"]#{&},
    .button#{&}
    {
        @include spell-box($color);
        
        span, i
        {
            @include glow-idle-text($color);
        }
        
        &:hover, &:focus
        {
            &:not([disabled])
            {
                @include glow-mild-border($color);
                
                span, i
                {
                    @include glow-mild-text($color);
                }
            }
        }
        
        &:active
        {
            @include glow-strong-border($color);
            
            span, i
            {
                @include glow-strong-text($color);
            }
        }
        
        &.selected
        {
            span, i
            {
                @include glow-strong-text($color);
            }
        }
    }
    
    &.box
    {
        @include spell-box($color);
        
        @include glow-idle-text($color);
    }
    
    &.portal, &.portal::before, &.portal::after
    {
        border : 1px solid $color;
    }
    &.portal
    {
        border-color: tint($color, $glow-portal-white-percent);
        box-shadow  : inset   0 0 ($portal-ring-spacing * 2) 1px rgba($color, 1),
                   /*outset*/ 0 0  $glow-strong-border-blur  2px rgba($color, 1);
    }
    &.portal::before, &.portal::after
    {
        animation-name : portal-ring-loop-#{$flavor-name};
    }
    
    @keyframes portal-ring-loop-#{$flavor-name}
    {
        0%
        {
            width  : calc(100% - 0px);
            height : calc(100% - 0px);
            top    : 0;
            left   : 0;
            
            box-shadow : inset   0 0 $glow-mild-border-blur 1px rgba($color, 1),
                      /*outset*/ 0 0 $glow-mild-border-blur 1px rgba($color, 1);
            opacity: 1;
        }
        50%
        {
            width  : calc(100% - #{$portal-ring-spacing - 2});
            height : calc(100% - #{$portal-ring-spacing - 2});
            top    : $portal-ring-spacing / 2 - 1;
            left   : $portal-ring-spacing / 2 - 1;
            
            box-shadow : inset   0 0 ($glow-mild-border-blur / 2) 0.5px rgba($color, 1),
                      /*outset*/ 0 0 ($glow-mild-border-blur / 2) 0.5px rgba($color, 1);
            opacity: 0.5;
        }
        100%
        {
            width  : calc(100% - #{$portal-ring-spacing * 2 - 2});
            height : calc(100% - #{$portal-ring-spacing * 2 - 2});
            top    : $portal-ring-spacing - 1;
            left   : $portal-ring-spacing - 1;
            
            box-shadow : inset   0 0 0 0 rgba($color, 1),
                /*outset*/ 0 0 0 0 rgba($color, 1);
            opacity: 0;
        }
    }
}
@mixin define-alert-flavor($color)
{
    &.box
    {
        @include spell-box($color);
        border : 3px double;
        @include glow-strong-border($color, 0%);
        
        color: $color;
        @include glow-strong-text($color, 0%);
        //width: 100%;
    }
}

.flavor-white  { @include define-flavor(white); }
.flavor-blue   { @include define-flavor($blue); }
.flavor-green  { @include define-flavor(green); }
.flavor-danger { @include define-flavor($danger-color); }

.flavor-alert-warn  { @include define-alert-flavor($danger-color); }
.flavor-alert-error { @include define-alert-flavor($error-color); }
/*.flavor-error
{
    @include define-flavor($error-color);
    
    &.box
    {
        border-style: double;
        border-width: 3px;
        @include glow-strong-border($error-color, 0%);
        
        color: $error-color;
        @include glow-strong-text($error-color, 0%);
        //width: 100%;
    }
}*/
